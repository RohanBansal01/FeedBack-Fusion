package com.feedbackfusion.model;

/**
 * Represents a Feedback entry in the system. 
 * 
 * <p>This class acts as a Plain Old Java Object (POJO) and maps to a record 
 * in the "feedback" database table. It stores user feedback such as 
 * feedback type (e.g., "Service", "Ambiance"), rating (1 to 5), and 
 * additional comments.</p>
 *
 * <p>Instances of this class are typically used to transfer data between
 * the application and persistence layer (DAO/Repository).</p>
 */
public class Feedback {

    /** 
     * Unique identifier for a feedback entry. 
     * <p>This is auto-generated by the database and may be {@code null} 
     * for newly created objects before persistence.</p>
     */
    private Integer id;

    /** 
     * The type/category of feedback, such as "Service", "Ambiance", or "Food".
     */
    private String feedbackType;

    /** 
     * Numerical rating provided by the user, expected to be in the range 1–5.
     */
    private int rating;

    /** 
     * Additional free-text comments provided by the user.
     */
    private String comments;

    /**
     * Constructs a new {@code Feedback} object for creating new feedback entries.
     * The {@code id} will remain {@code null} until persisted in the database.
     *
     * @param feedbackType the category of feedback (e.g., "Service")
     * @param rating       the rating score (1–5)
     * @param comments     optional comments about the feedback
     */
    public Feedback(String feedbackType, int rating, String comments) {
        this.feedbackType = feedbackType;
        this.rating = rating;
        this.comments = comments;
    }

    /**
     * Constructs a fully-initialized {@code Feedback} object, typically used
     * when retrieving records from the database where an {@code id} is present.
     *
     * @param id           the unique identifier of the feedback entry
     * @param feedbackType the category of feedback (e.g., "Ambiance")
     * @param rating       the rating score (1–5)
     * @param comments     optional comments about the feedback
     */
    public Feedback(Integer id, String feedbackType, int rating, String comments) {
        this.id = id;
        this.feedbackType = feedbackType;
        this.rating = rating;
        this.comments = comments;
    }

    /** 
     * @return the unique identifier of this feedback entry, or {@code null} if not yet persisted 
     */
    public Integer getId() {
        return id;
    }

    /** 
     * @return the type/category of feedback (e.g., "Food") 
     */
    public String getFeedbackType() {
        return feedbackType;
    }

    /** 
     * @return the rating score (1–5) 
     */
    public int getRating() {
        return rating;
    }

    /** 
     * @return the free-text comments provided by the user 
     */
    public String getComments() {
        return comments;
    }

    /** 
     * Sets the unique identifier of this feedback entry. 
     * Typically called by the persistence layer after inserting into the DB.
     *
     * @param id the database-generated unique identifier
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /** 
     * Sets the feedback type/category (e.g., "Service"). 
     *
     * @param feedbackType the category of feedback
     */
    public void setFeedbackType(String feedbackType) {
        this.feedbackType = feedbackType;
    }

    /** 
     * Sets the rating score (expected range: 1–5). 
     *
     * @param rating the numerical rating
     */
    public void setRating(int rating) {
        this.rating = rating;
    }

    /** 
     * Sets the free-text comments for this feedback entry. 
     *
     * @param comments the user comments
     */
    public void setComments(String comments) {
        this.comments = comments;
    }

    /**
     * Returns a string representation of the feedback for logging/debugging.
     *
     * @return a formatted string with feedback details
     */
    @Override
    public String toString() {
        return "Feedback{" +
                "id=" + id +
                ", feedbackType='" + feedbackType + '\'' +
                ", rating=" + rating +
                ", comments='" + comments + '\'' +
                '}';
    }
}
